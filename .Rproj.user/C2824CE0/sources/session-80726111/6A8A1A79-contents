pdcor.test <- function (x, y, z, R = 500) {
  n <- length(x)

  if ( is.matrix(z) ) {
    a1 <- dcov::dcor(x, y, type = "U")
    a2 <- Rfast::dcor(x, z, bc = TRUE)$dcor
    a3 <- Rfast::dcor(y, z, bc = TRUE)$dcor
    up <- a1 - a2 * a3
    down <- sqrt(1 - a2^2) * sqrt(1 - a3^2)
    stat <- up/down
    pstat <- numeric(R)
    for ( i in 1:R ) {
      id <- sample(n, n)
      a1 <- dcov::dcor(x[id], y, type = "U")
      a2 <- dcov::dcor(x[id], z, type = "U")
      up <- a1 - a2 * a3
      down <- sqrt(1 - a2^2) * sqrt(1 - a3^2)
      pstat[i] <- up/down
    }

  } else {
    a1 <- dcov::dcor(x, y, type = "U")
    a2 <- dcov::dcor(x, z, type = "U")
    a3 <- dcov::dcor(y, z, type = "U")
    up <- a1 - a2 * a3
    down <- sqrt(1 - a2^2) * sqrt(1 - a3^2)
    stat <- up/down
    pstat <- numeric(R)
    for ( i in 1:R ) {
      id <- sample(n, n)
      a1 <- dcov::dcor(x[id], y, type = "U")
      a2 <- dcov::dcor(x[id], z, type = "U")
      up <- a1 - a2 * a3
      down <- sqrt(1 - a2^2) * sqrt(1 - a3^2)
      pstat[i] <- up/down
    }
  }

  ( sum( pstat > stat ) + 1 ) / (R + 1)
}


pdcor.test3 <- function (x, y, z, R = 500) {
  n <- length(x)
  a1 <- dcov::dcor(x, y, type = "U")
  a2 <- dcov::dcor(x, z, type = "U")
  a3 <- dcov::dcor(y, z, type = "U")
  up <- a1 - a2 * a3
  down <- sqrt(1 - a2^2) * sqrt(1 - a3^2)
  stat <- up/down
  x <- Rfast::rep_col(x, R)
  x <- Rfast::colShuffle(x)
  a1 <- dcov::mdcor(y, x, type = "U")
  a2 <- dcov::mdcor(z, x, type = "U")
  up <- a1 - a2 * a3
  down <- sqrt(1 - a2^2) * sqrt(1 - a3^2)
  pstat <- up/down
  ( sum( pstat > stat ) + 1 ) / (R + 1)
}

